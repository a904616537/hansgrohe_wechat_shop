{
  "_args": [
    [
      {
        "raw": "moofx@3.0",
        "scope": null,
        "escapedName": "moofx",
        "name": "moofx",
        "rawSpec": "3.0",
        "spec": ">=3.0.0 <3.1.0",
        "type": "range"
      },
      "/Users/xumin/Documents/hansgrohe_wechat/node_modules/elements-ui"
    ]
  ],
  "_from": "moofx@>=3.0.0 <3.1.0",
  "_id": "moofx@3.0.14",
  "_inCache": true,
  "_location": "/moofx",
  "_npmUser": {
    "name": "kamicane",
    "email": "kamicane@gmail.com"
  },
  "_npmVersion": "1.1.66",
  "_phantomChildren": {},
  "_requested": {
    "raw": "moofx@3.0",
    "scope": null,
    "escapedName": "moofx",
    "name": "moofx",
    "rawSpec": "3.0",
    "spec": ">=3.0.0 <3.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/elements-ui"
  ],
  "_resolved": "https://registry.npmjs.org/moofx/-/moofx-3.0.14.tgz",
  "_shasum": "336dcd89ce485985ffa692da997e8eb25efb759a",
  "_shrinkwrap": null,
  "_spec": "moofx@3.0",
  "_where": "/Users/xumin/Documents/hansgrohe_wechat/node_modules/elements-ui",
  "author": {
    "name": "Valerio Proietti",
    "email": "@kamicane",
    "url": "http://mad4milk.net"
  },
  "bugs": {
    "url": "https://github.com/kamicane/moofx/issues"
  },
  "dependencies": {
    "cubic-bezier": "0.1.2",
    "elements": "0.0.9",
    "prime": "0.0.6"
  },
  "description": "A CSS3-enabled javascript animation library for node and the browser",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "336dcd89ce485985ffa692da997e8eb25efb759a",
    "tarball": "https://registry.npmjs.org/moofx/-/moofx-3.0.14.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "http://moofx.it",
  "keywords": [
    "moofx",
    "fx",
    "animation",
    "transition",
    "effects"
  ],
  "license": "MIT (http://mootools.net/license.txt)",
  "main": "./lib/main.js",
  "maintainers": [
    {
      "name": "kamicane",
      "email": "kamicane@gmail.com"
    },
    {
      "name": "arian",
      "email": "stolwijk.arian@gmail.com"
    }
  ],
  "name": "moofx",
  "optionalDependencies": {},
  "readme": "```\n            .-   3\n.-.-..-..-.-|-._.\n' ' '`-'`-' ' ' '\n```\n\nmoofx (3) is a css3-enabled javascript animation library\n\n## features\n\n - uses css3 transitions whenever available, falls back to normal javascript animation otherwise.\n - supports animating between different types of units, such as `em` to `px`, `px` to `%`, etc.\n - supports hsl colors for color-based properties.\n - supports transform animations in webkit browsers, firefox and ie9+.\n - includes a computedStyle normalizer.\n - framework agnostic, is easily pluggable in your favorite js framework.\n - cross browser.\n - small footprint, 6k gzipped (including dependencies).\n - simple api\n\n## API\n\nEvery property in moofx can either be provided camelized (`backgroundColor`) or hyphenated (`background-color`).\nColors can be provided as rbg (`rgb(20,30,40)`), rbga (`rbga(20,30,40,0.5)`), hsl (`hsl(20,30,40)`), hsla (`hsla(20,30,40,0.5)`) hex (`#fa0`, `#ffaa00`), or hexa (`#ffaa00ff`, `#fa0f`).\nLengths will always be retrieved in pixels, unless they have a value of `auto`, and you are able to animate *from to whatever length unit to whatever length unit*.\n\nmoofx3 can animate and has full support for the following properties: `backgroundColor`, `color`, `backgroundSize`, `fontSize`, `height`, `width`, `marginTop`, `paddingTop`, `borderTopWidth`, `top`, `borderTopColor`, `borderTopStyle`, `marginRight`, `paddingRight`, `borderRightWidth`, `right`, `borderRightColor`, `borderRightStyle`, `marginBottom`, `paddingBottom`, `borderBottomWidth`, `bottom`, `borderBottomColor`, `borderBottomStyle`, `marginLeft`, `paddingLeft`, `borderLeftWidth`, `left`, `borderLeftColor`, `borderLeftStyle`, `borderTopLeftRadius`, `borderTopRightRadius`, `borderBottomRightRadius`, `borderBottomLeftRadius`, `zIndex`, `margin`, `padding`, `borderRadius`, `borderWidth`, `borderColor`, `borderTop`, `borderRight`, `borderBottom`, `borderLeft`, `border`, `opacity`, `boxShadow`, `textShadow` and `transform`. Every other css property is handled automatically using getComputedStyle.\n\n### moofx\n\nthe moofx method takes as first argument either a collection of nodes (such as the return value of `document.querySelectorAll`) an array of nodes (such as the expected return value of every dom selector library available, such as [`Slick`](https://github.com/mootools/slick), or [`Sizzle`](https://github.com/jquery/sizzle)), or a single node selected by whatever means.\n\nIt is however reccomended that you use moofx as part of a javascript library's api (see below).\n\n```javascript\nmoofx(document.querySelectorAll('div.box'));\nmoofx(document.querySelector('div#box'));\nmoofx(Slick.find('div#box'));\nmoofx(Slick.search('div.box'));\nmoofx(Sizzle('div.box'));\nmoofx(document.getElementById('box'));\n```\n\n### moofx::animate\n\nThe `animate` method accepts either an object made of styles, or a property and a value, followed by the optional `options` object.\n\n```javascript\nmoofx(nodes).animate({'background-color': '#ffa', 'color': 'black'}); //animate some styles, default options\n\nmoofx(nodes).animate('background-color', '#ffa'); //animate property to value\n\nmoofx(nodes).animate({'background-color': '#ffa', 'color': 'black'}, {duration: 500}); //animate styles using options (500ms duration)\n\nmoofx(nodes).animate('background-color', '#ffa', {duration: 500}); //animate property to value using options (500ms duration)\n\nmoofx(nodes).animate({'background-color': '#ffa'}, {duration: 5000}); //5s duration\n\nmoofx(nodes).animate({'background-color': '#ffa'}, {duration: \"5000ms\", equation: 'cubic-bezier(0.17,0.67,0.83,0.67)'}); //5s duration, cubic-bezier easing equation\n\nmoofx(nodes).animate({'background-color': '#ffa'}, {duration: \"5s\", equation: 'ease-in'}); //5s duration, ease-in easing equation\n\nmoofx(nodes).animate({'background-color': '#ffa'}, {duration: \"5s\", equation: 'ease-in-out', callback: function(){ //5s duration, ease-in-out easing equation, completion callback\n\tconsole.log('animated');\n}});\n```\n\n### moofx::style\n\nThe `style` method accepts either an object made of styles or property and a value.\n\n```javascript\nmoofx(nodes).style({'background-color': 'red', 'color': 'black'});  //set styles\n\nmoofx(nodes).style('background-color', 'rgba(0,0,0,0)'); //set style property to value\n```\n\n### moofx::compute\n\nComputed style getter and normalizer. Note that lengths will always return in `px` (unless is `\"auto\"`) and colors in `rgba` for consistency.\n\n```javascript\nmoofx(node).compute('background-color'); //get (normalized!) computed style of node for property\n```\n\n### moofx.requestFrame / moofx.cancelFrame\n\nmoofx also provides an advanced requestAnimationFrame shim, that supports canceling and the standard time argument.\n\n```javascript\nvar callback = function(time){\n\tconsole.log(time);\n};\n\nmoofx.requestFrame(callback); //sets callback to be executed on the next animationFrame\nmoofx.cancelFrame(callback); //whopsie, better not! callback will not get executed.\n\nmoofx.requestFrame(callback); //on second thought, let's do it\nmoofx.requestFrame(callback); //three\nmoofx.requestFrame(callback); //times\n\n//and the time argument logged 3 times in your console will be the same, since the callbacks will get executed during the same animationFrame.\n```\n\n### moofx.color\n\nmoofx also exports a simple any-to-rgb color converter, with a very basic, very straightforward usage:\n\n```javascript\nmoofx.color('#000'); //rgb(0, 0, 0)\nmoofx.color('#0000'); //rgba(0, 0, 0, 0)\nmoofx.color('#00000000'); //rgba(0, 0, 0, 0)\n\nmoofx.color('hsl(0, 0, 0)'); //rgb(0, 0, 0)\nmoofx.color('hsla(0, 0, 0, 0)'); //rgba(0, 0, 0, 0)\n```\n\n## installation\n\nInclude the pre-built moofx.js (or moofx-min.js) in the webpage of choice. Use it. Love it. Done.\n\n## adapters\n\nmoofx was built to be used in conjuction with your favorite javascript framework. Some basic examples:\n\nMooTools integration:\n\n```javascript\nElement.implement('animate', function(){\n\tvar moo = moofx(this);\n\tmoo.animate.apply(moo, arguments);\n\treturn this;\n});\n```\n\njQuery integration:\n\n```javascript\njQuery.fn.animate = function(){\n\tvar moo = moofx(this.get());\n\tmoo.animate.apply(moo, arguments);\n\treturn this;\n};\n```\n\nThen just get busy with your dollars.\n\n## BIY (build-it-yourself)\n\nYou can build moofx (+dependencies) from source with [wrapup](https://github.com/kamicane/wrapup)\n\n```\nnpm install wrapup -g\nmkdir webdev\ncd webdev\nnpm install moofx\nwrup -r moofx moofx -o moofx.js\nwrup -r moofx moofx -o moofx-min.js -c\n```\n\nAlternatively, you can use the `makejs` node executable in this repo (you still need wrapup installed).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/kamicane/moofx.git"
  },
  "sources": [
    "./moofx.js"
  ],
  "version": "3.0.14"
}
